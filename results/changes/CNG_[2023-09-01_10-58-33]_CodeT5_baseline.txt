==================>      CHANGES IN REMEDIATION      <===================
|                                                                       |
|    [VULN] -> Vulnerable code snippets detected                        |
|    [SAFE] -> Changes to code snippets are shown in CAPITAL LETTERS    |
|    [NOT_SAFE] -> Code snippets not completely changed                 |
|                                                                       |
=========================================================================


[VULN] , KUF(EVAL) : from Flask import escape \n user_input = request.args.get('user_input ', ') \n eval(escape(user_input)) 

[SAFE] , KUF(EVAL) : from Flask import escape \n user_input = request.args.get('user_input ', ') \n AST.LITERAL_EVAL(escape(user_input)) 



[VULN] , KUF(HASHLIB_NEW_ONE_PARAM) : def updatePassword(userName, Password): hasher = hashlib.new('sha512') \n hasher.update(Password) 

[SAFE] , KUF(HASHLIB_NEW_ONE_PARAM) : def updatePassword(userName, Password): hasher = HASHLIB.NEW('SHA512', USEDFORSECURITY=TRUE) \n hasher.update(Password) 



[VULN] , KUF(PICKLE) : return pickle.loads(data) 

[SAFE] , KUF(PICKLE) : return PICKLE_SECURE.loads(data) 



[VULN] , TP(REQ_args_GET_NEW) : def EcSer(): \n port = request.args.get('port') \n s = socket(socket.AF_INET, socket.SOCK_STREAM) \n s.bind((port, IP)) 

[SAFE] , TP(REQ_args_GET_NEW) : def EcSer(): \n port = request.args.get('port') \n s = socket(socket.AF_INET, socket.SOCK_STREAM) \n s.bind((ESCAPE(port), IP)) 







======>    SUMMARY   <======

#Vuln: 4 

#Safe: 4 

#NotSafe: 0 

